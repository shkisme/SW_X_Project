# -*- coding: utf-8 -*-
"""2021 PNU SW-X 문제해결 경진대회 소스코드 손현경

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dqVhxR8cBja9g6poalNBxUlvIqvhHEEP

# 실시간 멜론 음원 차트를 확인해보세요!
"""

import requests
from bs4 import BeautifulSoup

if __name__ == "__main__":
    RANK = int(input("몇 위까지의 노래를 보고 싶으신가요? ")) # 멜론 차트 순위, 사용자가 원하는 만큼의 차트순위를 입력하는 것이 가능합니다.
    print("-"*50)
    header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.43'}
    req = requests.get('https://www.melon.com/chart/index.htm', headers =header) # request라이브러리를 이용하여  원하는 url의 http 요청을 받아옵니다.
    html = req.text # 받아온 데이터를 text로 변환합니다.
    parse = BeautifulSoup(html, 'html.parser') # BeautifulSoup 라이브러리를 이용하여 html로 파싱합니다.
 
    titles = parse.find_all("div", {"class": "ellipsis rank01"}) 
    singers = parse.find_all("div", {"class": "ellipsis rank02"}) 
 
    title = []
    singer = []
 
    for t in titles:
        title.append(t.find('a').text)
 
    for s in singers:
        singer.append(s.find('span', {"class": "checkEllipsis"}).text)
 
    for i in range(RANK):
        print("랭킹 : %d위" % (i + 1))
        print('곡명 : %s' % title[i])
        print('가수 : %s' % singer[i])
        print("-"*50)

"""# 어떤 가수가 지금 가장 핫할까요? 분석해드립니다."""

singer_list = []
singer_num = []

len = 0

for i in range(100):
  if ',' in singer[i]:
    tmp = singer[i].split(', ')
    for j in tmp:
      singer_list.append(j)
      len += 1
  else:
    singer_list.append(singer[i])
    len += 1

n_singer_list = []

for i in range(len):
  cnt = 1
  for j in range(i+1,len):
    if (singer_list[i] == singer_list[j]) & (singer_list[i] != 0) :
      cnt += 1
      singer_list[j] = 0
  if singer_list[i] != 0:
    singer_num.append(cnt)
    n_singer_list.append(singer_list[i])

!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
import matplotlib.font_manager as fm
 

plt.rc('font', family='NanumBarunGothic') 

len2 = 0

for i in n_singer_list:
  len2 += 1

x = np.arange(len2)
plt.bar(x,singer_num)
plt.xticks(x,n_singer_list)
plt.xticks(rotation = - 45 )
plt.show()

max = 0
index = 0
max_singer_list = []

for i in range(len2):
  if singer_num[i] >= max:
    max = singer_num[i]
    index = i

if singer_num.count(max)>1:
  j=0
  for i in range(len2):
    if singer_num[i] == max:
      max_singer_list.append(n_singer_list[i])
else :
  max_singer_list.append(n_singer_list[index])

print("현재 멜론 차트 TOP 100 에 가장 많은 비중을 차지하고 있는 가수는 %s 입니다." % max_singer_list)

!sudo apt install tesseract-ocr
!pip install pytesseract
!sudo apt install tesseract-ocr-kor
!pip install googletrans==4.0.0-rc1

"""# 가장 인기 있는 가수의 유튜브 영상을 바로 확인해보세요!"""

import pytesseract
import cv2
from google.colab.patches import cv2_imshow
import googletrans
from googletrans import Translator

translator = Translator()

for i in max_singer_list:
  print("%s 가수의 유튜브 영상 링크 : " % i , end = '')
  trans = translator.translate(i,src='ko',dest='en')
  url = 'https://www.youtube.com/results?search_query=' + trans.text.replace(' ','')
  print(url)
  print("\n")

"""# 나만의 유튜브 플레이 리스트를 만들어 봅시다!"""

import datetime
main = """
  1. 플레이 리스트 리셋하여 새로 만들기
  2. 플레이 리스트에 노래 추가하기
  3. 저장하기 OR 그만두기
"""
print("-"*25 + "메뉴" + "-"*25)
print(main)
print("-"*54)

def create():
  memo = input("""
추가하고 싶은 노래의 제목과 유튜브 링크를 입력해주세요
' '(공백)으로 구분하여 입력해주세요! >> """)
  with open('playlist.txt','w') as f:
    f.write(f'{memo}\n')
def append():
  memo = input("""
추가하고 싶은 노래의 제목과 유튜브 링크를 입력해주세요
' '(공백)으로 구분하여 입력해주세요! >> """)
  with open('playlist.txt','a') as f:
    f.write(f'{memo}\n')

while True:
  menu = int(input("- 메뉴를 선택하세요 - "))
  if menu == 1:
    create()
  elif menu == 2:
    append()
  else:
    print("저장했습니다!")
    break
  print("\n<현재 나의 플레이 리스트>\n")
  with open('playlist.txt','r') as f:
    for line in f.readlines():
      print(line,end='') 
      print("\n")

"""## 나만의 플레이 리스트 완성!"""

from IPython.display import YouTubeVideo, display 

with open('playlist.txt','r') as f:
  for line in f.readlines():
    mysong = line.split(' ')[1]
    mysonglink = mysong.split('v=')[1]
    mysonglink2 = mysonglink.split('\n')[0]
    video = YouTubeVideo(mysonglink2, width=500) 
    display(video)